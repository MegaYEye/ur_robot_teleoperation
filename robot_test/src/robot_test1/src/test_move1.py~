#!/usr/bin/env python
import time
import roslib; roslib.load_manifest('ur_driver')
import rospy
import actionlib
from geometry_msgs.msg import Vector3
from control_msgs.msg import *
from trajectory_msgs.msg import *
from sensor_msgs.msg import JointState
from math import pi

JOINT_NAMES = ['shoulder_pan_joint', 'shoulder_lift_joint', 'elbow_joint',
               'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint']
Q1 = [2.4,-1.6,1.6,-3.2,-1.5,0.6]
Q2 = [0.8,-1.76,1.73,-3.16,-1.5,0.6]
Q3 = [2.4,-1.6,1.6,-3.2,-1.5,0.6]
    
client = None

def move1(msg):
    global joints_pos
    x = msg.x
    y = msg.y
    z = msg.z
    Q1 = [2.4,-1.6,1.6,-3.2,-1.5,0.6]
    Q2 = [0.8,-1.76,1.73,-3.16,-1.5,0.6]
    Q3 = [x,y,z,-3.2,-1.5,0.6]
    g = FollowJointTrajectoryGoal()
    g.trajectory = JointTrajectory()
    g.trajectory.joint_names = JOINT_NAMES
    try:
        joint_states = rospy.wait_for_message("joint_states", JointState)
        joints_pos = joint_states.position
        g.trajectory.points = [
            JointTrajectoryPoint(positions=joints_pos, velocities=[0.1]*6, time_from_start=rospy.Duration(0)),
            JointTrajectoryPoint(positions=Q1, velocities=[0.1]*6, time_from_start=rospy.Duration(4)),
            JointTrajectoryPoint(positions=Q2, velocities=[0.1]*6, time_from_start=rospy.Duration(8)),
            JointTrajectoryPoint(positions=Q3, velocities=[0.5]*6, time_from_start=rospy.Duration(12)),
        client.send_goal(g)

def main():
    global client
    try:
        rospy.init_node("test_move", anonymous=True, disable_signals=True)
        client = actionlib.SimpleActionClient('follow_joint_trajectory', FollowJointTrajectoryAction)
        print "Waiting for server..."
        client.wait_for_server()
        print "Connected to server"
        parameters = rospy.get_param(None)
        index = str(parameters).find('prefix')
        if (index > 0):
            prefix = str(parameters)[index+len("prefix': '"):(index+len("prefix': '")+str(parameters)[index+len("prefix': '"):-1].find("'"))]
            for i, name in enumerate(JOINT_NAMES):
                JOINT_NAMES[i] = prefix + name
        rospy.Subscriber('/joint_pos',move1, queue_size=10)
    except KeyboardInterrupt:
        rospy.signal_shutdown("KeyboardInterrupt")
        raise

if __name__ == '__main__': main()
